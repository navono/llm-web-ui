user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml font/truetype font/opentype 
               application/vnd.ms-fontobject image/svg+xml;

    # Upstream servers
    upstream indextts2 {
        server indextts2:12234;
    }

    upstream open-llm-vtuber {
        server open-llm-vtuber:12393;
    }

    # 可以添加其他 OpenAI 兼容服务
    # upstream openai-service {
    #     server openai-service:8000;
    # }

    server {
        listen 8080;
        server_name _;

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # ==========================================
        # TTS 服务路由 (indextts2)
        # ==========================================
        
        # OpenAI 兼容的 TTS 端点
        location /v1/audio/speech {
            proxy_pass http://indextts2;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 增加超时时间，TTS 生成可能需要较长时间
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # 禁用缓冲以支持流式响应
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # 自定义 TTS 端点
        location /v1/tts {
            proxy_pass http://indextts2;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            proxy_buffering off;
            proxy_request_buffering off;
        }

        # TTS 语音列表
        location /v1/voices {
            proxy_pass http://indextts2;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ==========================================
        # ASR 转录服务路由 (open-llm-vtuber)
        # ==========================================
        
        # OpenAI 兼容的转录端点
        location /v1/audio/transcriptions {
            proxy_pass http://open-llm-vtuber;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 增加超时时间
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # 自定义 ASR 端点
        location /asr {
            proxy_pass http://open-llm-vtuber;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # ==========================================
        # 模型列表端点 - 聚合所有服务的模型
        # ==========================================
        location = /v1/models {
            # 默认返回聚合的模型列表
            # 如果需要特定服务的模型，可以添加查询参数
            default_type application/json;
            return 200 '{
                "object": "list",
                "data": [
                    {
                        "id": "indextts2",
                        "object": "model",
                        "created": 1677610602,
                        "owned_by": "custom",
                        "capabilities": ["tts"]
                    },
                    {
                        "id": "funASR",
                        "object": "model",
                        "created": 1677610603,
                        "owned_by": "custom",
                        "capabilities": ["transcription"]
                    }
                ]
            }';
        }

        # ==========================================
        # Open-LLM-VTuber WebSocket 端点
        # ==========================================
        location /client-ws {
            proxy_pass http://open-llm-vtuber;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket 超时设置
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        location /tts-ws {
            proxy_pass http://open-llm-vtuber;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        location /proxy-ws {
            proxy_pass http://open-llm-vtuber;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # ==========================================
        # Open-LLM-VTuber 静态资源和其他端点
        # ==========================================
        location /web-tool {
            proxy_pass http://open-llm-vtuber;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /live2d-models {
            proxy_pass http://open-llm-vtuber;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # ==========================================
        # 根路径 - API 网关信息
        # ==========================================
        location = / {
            default_type application/json;
            return 200 '{
                "service": "LLM Web UI API Gateway",
                "version": "1.0.0",
                "endpoints": {
                    "tts": {
                        "openai_compatible": "/v1/audio/speech",
                        "custom": "/v1/tts",
                        "voices": "/v1/voices"
                    },
                    "asr": {
                        "openai_compatible": "/v1/audio/transcriptions",
                        "custom": "/asr"
                    },
                    "websocket": {
                        "client": "/client-ws",
                        "tts": "/tts-ws",
                        "proxy": "/proxy-ws"
                    },
                    "models": "/v1/models",
                    "health": "/health"
                }
            }';
        }

        # ==========================================
        # 扩展: 其他 OpenAI 兼容服务
        # ==========================================
        # 如果需要添加其他服务（如 LLM、Embedding 等），可以在这里配置
        
        # 示例: LLM Chat Completions
        # location /v1/chat/completions {
        #     proxy_pass http://openai-service;
        #     proxy_http_version 1.1;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        #     
        #     proxy_connect_timeout 300s;
        #     proxy_send_timeout 300s;
        #     proxy_read_timeout 300s;
        #     
        #     proxy_buffering off;
        # }

        # 示例: Embeddings
        # location /v1/embeddings {
        #     proxy_pass http://embedding-service;
        #     proxy_http_version 1.1;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Proto $scheme;
        # }
    }
}
